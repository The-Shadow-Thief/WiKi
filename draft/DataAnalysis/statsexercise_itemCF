#title 协同推荐系统

<p>

* 协同过滤(collaborative filterring, CF)

协同过滤是集体智慧的一种方法，它是在海量的数据中发现和你有相同兴趣的人或者物作为你的邻居，
然后根据你邻居的选择来推荐给你。

我们可以从amazon、当当网、京东等首页对你的推荐，你可以看到这样的信息。
有多少人在买下改物品之后还买了什么什么的。这就是协同过滤推荐系统的作用。

下面就针对amazon的推荐系统进行展开：


* CF process

1. 肯定是获取到用户，物品已经对物品喜好的数据。
2. 是要对数据去噪和归一化，便于数据的比较和计算。
3. 计算物品或者用户间的相关程度（距离的倒数）。

下面是计算数据的几个方法。

**** 1. 欧式距离
这里是距离越小，相关性越大。
这里原来有一个疑惑，在统计分析中计算两个数据的距离的时候欧氏距离是不适合，而采用的是马氏距离。
分析了一下可能的原因是，可能这里人物数据比较准确，不涉及到统计的数据。

d(x,y)=sqrt(sum(x_i-y_i)**2)

则相关性公式为sim(x,y) = 1 / 1 + d(x,y)

**** 2. 皮尔逊相关系数

**** 3. COSINE相似度

T(x,y) = x * y / (mod(x)**2 + mod(y)**2 -x * y)


* CF 分类

CF主要分为两类：user CF, item CF.

user CF就是根据用户的角度进行分析。其思想是以人为分类主题，我们把物品看成人的属性，
更加人的物品属性将人分成不同兴趣的群体，或者是找到距离你最近的人作为你的连接。
然后根据你的邻居对物品的选择，来推荐给你。


item CF是根据物品的角度。其思想则是从物品来分类，把人对其选择作为属性，
根据人堆物品的兴趣选择来计算出物品之间的距离，然后根据你购买的物品，推荐给你离你购买物品比较
近的物品给你。


从方法论的角度来看这个。人以群聚，物以类分。某些群体对物品的选择方向具有一致性的。

但是这两种方法的区别是什么呢？如果选择？

1. 还是从实际的角度来分析，首先从商场这种情况下，物品相对比较稳定，这种情况采用Item CF，对降低
系统计算的复杂来说是很好的

2. 从多样性的角度来看，应该是User CF更胜一筹，疑问物品的相关性来分析，很容易将同一类的物品作为
其邻居，但是人的选择则是更多样的，所以呈现出来，或者是推荐出来的物品更多样。


* R实现

<example>
#dd
# 读入数据，原数据是user-subject的收藏二元组
data = read.table('user_subject.txt', sep=',', header=TRUE)
# 标识user与subject的索引
user = unique(data$user_id)
subject = unique(data$subject_id)
uidx = match(data$user_id, user)
iidx = match(data$subject_id, subject)

length(uidx);length(iidx); length(data$user_id); length(data$subject_id)
head(uidx)
# 从二元组构造收藏矩阵
M = matrix(0, length(user), length(subject))
i = cbind(uidx, iidx); 
M[i] = 1
# 对列向量（subject向量）进行标准化，%*%为矩阵乘法
mod = colSums(M^2)^0.5  # 各列的模
MM = M %*% diag(1/mod)  # M乘以由1/mod组成的对角阵，实质是各列除以该列的模

#crossprod实现MM的转置乘以MM，这里用于计算列向量的内积，S为subject的相似度矩阵
#according to Cosine相似度来进行计算
#协同推荐的一下资料：http://www.ibm.com/developerworks/cn/web/1103_zhaoct_recommstudy2/index.html
# or paper： 改进的协同过滤推荐算法 in resour/r中pdf，都有打印文
S = crossprod(MM)
head(S)
# user-subject推荐的分值
R = M %*% S
R = apply(R, 1, FUN=sort, decreasing=TRUE, index.return=TRUE)
k = 5
# 取出前5个分值最大的subject
res = lapply(R, FUN=function(r)return(subject[r$ix[1:k]]))
# 输出数据
write.table(paste(user, res, sep=':'), file='result.dat', quote=FALSE, row.name=FALSE, col.name=FALSE)

</example>

data格式：

userid,subjectid

<example>
user_id,subject_id
1,1
1,3
1,7
1,13
2,2
2,5
2,6
2,7
2,9
2,10
2,11
3,1
3,2
3,3
3,4
3,7
3,9
3,10
5,13
6,1
6,3
6,4
6,5
6,8
6,10
8,1
8,2
8,3
.....
</example>


* summary

其实就是聚类思想，将user按其属性物品，或者物品按其属性user进行聚类，找到离自己比较近的数据推荐给用户。

可以看到主题还是将数据呈现成矩阵的方式，然后输入到R中计算。

另外可以看到：推荐出来的结果包含user本身具买的结果，所有这些都没有在考虑范围之内。
</>

[[statsexercise.html][UP]]
